@using Web.Graph.Models.Auth
@using Web.Graph.Utils
@model LoginViewModel
@{
    ViewBag.Title = "Iniciar sesión";  
}
@section styles
{
    <style>
.bs-callout{padding:20px;margin:20px 0;border:1px solid #eee;border-left-width:5px;border-radius:3px;border-left-color:#ce4844}.auth-ico{font-size:40px;color:gray}
    </style>
    <link rel="stylesheet" href="~/Content/bootstrap-social.css"/>
}
<h2 class="normal-title">@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-7">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use una cuenta existente para iniciar sesión.</h4>
                <hr />
                if (ViewContext.ViewData.ModelState.Any(x => x.Key == ""))
                {
                    @Html.ValidationSummary("", new { @class = "text-danger bs-callout" })
                }
                <div class="form-group ">
                    <div class="col-xs-1">
                        <i class="fa fa-user auth-ico"></i>
                    </div>
                    @*@Html.LabelFor(m => m.Email, new {@class = "col-md-2 control-label"})*@
                    <div class="col-xs-11">
                        @Html.TextBoxFor(m => m.Email, new {@class = "form-control", placeholder = Html.DisplayNameRawFor(r => r.Email) })
                        @Html.ValidationMessageFor(m => m.Email, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-1">
                        <i class="fa fa-lock auth-ico"></i>
                    </div>
                    @*@Html.LabelFor(m => m.Password, new {@class = "col-md-2 control-label"})*@
                    <div class="col-xs-11">
                        @Html.PasswordFor(m => m.Password, new {@class = "form-control", placeholder = Html.DisplayNameRawFor(r => r.Password) })
                        @Html.ValidationMessageFor(m => m.Password, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-11 squaredFour">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-11">
                        <input type="submit" value="Iniciar sesión" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    <span class="fa fa-user" style="color: gray"></span> @Html.ActionLink("Registrar como nuevo usuario", "Register")
                </p>
                @* Habilite esta opción después de habilitar la confirmación de la cuenta para la función de restablecimiento de contraseña
                    <p>
                        @Html.ActionLink("¿Ha olvidado su contraseña?", "ForgotPassword")
                    </p>*@
            }
        </section>
    </div>
    <div class="col-md-4 col-md-offset-1">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
<script>
var getStyleSocial = function (a) { switch (a = a.toLowerCase()) { case "microsoft": return { ico: "windows", theme: "btn-" + a }; case "slack": return { ico: a, theme: "btn-vimeo" }; default: return { ico: a, theme: "btn-" + a } } }; $("#socialLoginList>p").find("button").each(function () { var a = $(this), b = getStyleSocial(a.val()); a.html('<i class="fa fa-' + b.ico + '"></i> ' + a.val()), a.addClass(b.theme) });
</script>
}